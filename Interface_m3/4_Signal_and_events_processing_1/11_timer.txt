Существует такое понятие в PyQt, как таймеры. Таймеры позволяют через заданный интервал времени выполнять метод
с предопределенным названием timerEvent(). Для назначения таймера используется метод startTimer() класса QObject.
Формат метода:
<Id> = <Объект>.startTimer(<Интервал>[, timerType=<Тип таймера>])

Параметр <Интервал> задает промежуток времени в миллисекундах, по истечении которого выполняется метод timerEvent().
Минимальное значение интервала зависит от операционной системы. Если в параметре <Интервал> указать значение 0,
таймер будет срабатывать много раз при отсутствии других необработанных событий.

Необязательный параметр timerType позволяет указать тип таймера в виде одного из атрибутов класса QtCore.Qt:

PreciseTimer — точный таймер, обеспечивающий точность до миллисекунд;

CoarseTimer — таймер, обеспечивающий точность в пределах 5% от заданного интервала (значение по умолчанию);

VeryCoarseTimer — «приблизительный» таймер, обеспечивающий точность до секунд.

Метод startTimer() возвращает идентификатор таймера, с помощью которого впоследствии можно остановить таймер.
Формат метода timerEvent():
timerEvent(self, <Объект класса QTimerEvent>)

Внутри него можно получить идентификатор таймера с помощью метода timerId() объекта
класса QTimerEvent.
Чтобы остановить таймер, необходимо воспользоваться методом killTimer() класса QObject. Формат метода:
<Объект>.killTimer(<Id>)
В качестве параметра указывается идентификатор, возвращаемый методом startTimer().
