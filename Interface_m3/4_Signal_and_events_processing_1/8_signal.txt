Проверить, доступен компонент или нет, позволяет метод isEnabled(). Он возвращает значение True,
если компонент доступен, и False — в противном случае.

В некоторых случаях необходимо сгенерировать сигнал программно.
Например, при заполнении последнего текстового поля и нажатии клавиши <Enter> можно имитировать нажатие кнопки ОK
и тем самым выполнить подтверждение ввода пользователя.
Осуществить генерацию сигнала из программы позволяет метод emit() класса QObject. Форматы этого метода:

<Компонент>.<Сигнал>.emit([<Данные>])
<Компонент>.<Сигнал>[<Тип>].emit([<Данные>])

Метод emit() всегда вызывается у объекта, которому посылается сигнал:
button.clicked.emit()

Сигналу и, соответственно, его обработчику можно передать данные, указав их в вызове метода emit():
button.clicked[bool].emit(False)
button.clicked["bool"].emit(False)

Также мы можем создавать свои собственные сигналы. Для этого следует определить в классе атрибут,
чье имя совпадет с наименованием сигнала. Отметим, что это должен быть атрибут класса, а не экземпляра.
Далее мы присвоим вновь созданному атрибуту результат, возвращенный функцией pyqtSignal() из модуля QtCore.
Формат функции:
<Объект сигнала> = pyqtSignal(*<Типы данных>[, name=<Имя сигнала>])

В параметре <Типы данных> через запятую указываются названия типов данных, передаваемых сигналу,  например: bool или int:
mysignal1 = QtCore.pyqtSignal(int)
mysignal2 = QtCore.pyqtSignal(int, str)

Если сигнал не принимает параметров, параметр <Типы данных> не указывается.
Сигнал может иметь несколько перегруженных версий, различающихся количеством и типом принимаемых параметров.
В этом случае типы параметров указываются внутри квадратных скобок. Пример сигнала, передающего данные типа int или str:
mysignal4 = QtCore.pyqtSignal([int], [str])

По умолчанию название создаваемого сигнала будет совпадать с названием атрибута класса.
Однако мы можем указать для сигнала другое название, после чего он будет доступен под двумя названиями:
совпадающим с именем атрибута класса и заданным нами.
Для указания названия сигнала применяется параметр name:
mysignal = QtCore.pyqtSignal(int, name="mySignal")
