События клавиатуры обрабатываются очень часто. Например, при нажатии клавиши <F1> выводится справочная информация,
при нажатии клавиши <Enter> в однострочном текстовом поле фокус ввода переносится на другой компонент,
и т. д. Рассмотрим события клавиатуры подробно.

------------------------------------------------------------------------------------------------------------------------

В текущий момент времени только один компонент (или вообще ни одного) может иметь фокус ввода.
Для управления фокусом ввода предназначены следующие методы класса QWidget:

setFocus([<Причина>]) — устанавливает фокус ввода, если компонент находится в активном окне.
В параметре <Причина> можно указать причину изменения фокуса ввода в виде одного из следующих атрибутов класса QtCore.Qt:

    • MouseFocusReason — 0 — фокус изменен с помощью мыши;
    • TabFocusReason — 1 — нажата клавиша <Tab>;
    • BacktabFocusReason — 2 — нажата комбинация клавиш <Shift>+<Tab>;
    • ActiveWindowFocusReason — 3 — окно стало активным или неактивным;
    • PopupFocusReason — 4 — открыто или закрыто всплывающее окно;
    • ShortcutFocusReason — 5 — нажата комбинация клавиш быстрого доступа;
    • MenuBarFocusReason — 6 — фокус изменился из-за меню;
    • OtherFocusReason — 7 — другая причина;

------------------------------------------------------------------------------------------------------------------------

clearFocus() — убирает фокус ввода с компонента;
------------------------------------------------------------------------------------------------------------------------
hasFocus() — возвращает значение True, если компонент имеет фокус ввода, и False в противном случае;
------------------------------------------------------------------------------------------------------------------------
focusWidget() — возвращает ссылку на последний компонент, для которого вызывался метод setFocus().
Для компонентов верхнего уровня возвращается ссылка на компонент, который получит фокус после того, как окно станет активным;
------------------------------------------------------------------------------------------------------------------------
setFocusProxy(<QWidget>) — позволяет указать ссылку на компонент, который будет получать фокус ввода вместо текущего компонента;
------------------------------------------------------------------------------------------------------------------------
focusProxy() — возвращает ссылку на компонент, который обрабатывает фокус ввода вместо текущего компонента.
Если такого компонента нет, метод возвращает значение None;
------------------------------------------------------------------------------------------------------------------------
focusNextChild() — находит следующий компонент, которому можно передать фокус, и передает фокус ему.
Фактически работает аналогично нажатию клавиши <Tab>.
Возвращает значение True, если компонент найден, и False — в противном случае;
------------------------------------------------------------------------------------------------------------------------
focusPreviousChild() — находит предыдущий компонент, которому можно передать фокус, и передает фокус ему.
Работает аналогично нажатию комбинации клавиш <Shift>+<Tab>.
Возвращает значение True, если компонент найден, и False — в противном случае;
------------------------------------------------------------------------------------------------------------------------
focusNextPrevChild(<Флаг>) — если в параметре указано значение True, работает аналогично методу focusNextChild(),
если указано False — аналогично методу focusPreviousChild().
Возвращает значение True, если компонент найден, и False в противном случае;
------------------------------------------------------------------------------------------------------------------------
setTabOrder(<Компонент1>, <Компонент2>) — позволяет задать последовательность смены фокуса при нажатии клавиши <Tab>.
Метод является статическим. В параметре <Компонент2> указывается ссылка на компонент,
на который переместится фокус с компонента <Компонент1>. Если компонентов много, метод вызывается несколько раз.
Вот пример указания цепочки перехода widget1 -> widget2 -> widget3 -> widget4:
    QtWidgets.QWidget.setTabOrder(widget1, widget2)
    QtWidgets.QWidget.setTabOrder(widget2, widget3)
    QtWidgets.QWidget.setTabOrder(widget3, widget4)
------------------------------------------------------------------------------------------------------------------------
setFocusPolicy(<Способ>) — задает способ получения фокуса компонентом в виде одного из следующих атрибутов класса QtCore.Qt:

    • NoFocus — 0 — компонент не может получать фокус;
    • TabFocus — 1 — получает фокус с помощью клавиши <Tab>;
    • ClickFocus — 2 — получает фокус с помощью щелчка мышью;
    • StrongFocus — 11 — получает фокус с помощью клавиши <Tab> и щелчка мышью;
    • WheelFocus — 15 — получает фокус с помощью клавиши <Tab>, щелчка мышью и колесика мыши;
------------------------------------------------------------------------------------------------------------------------
focusPolicy() — возвращает текущий способ получения фокуса;
------------------------------------------------------------------------------------------------------------------------
grabKeyboard() — захватывает ввод с клавиатуры. Другие компоненты не будут получать события клавиатуры,
пока не будет вызван метод releaseKeyboard();
------------------------------------------------------------------------------------------------------------------------
releaseKeyboard() — освобождает захваченный ранее ввод с клавиатуры. Получить ссылку на компонент,
находящийся в фокусе ввода, позволяет статический метод focusWidget() класса QApplication.
Если ни один компонент не имеет фокуса ввода, метод возвращает значение None.
Не путайте этот метод с одноименным методом из класса QWidget.
------------------------------------------------------------------------------------------------------------------------
Обработать получение и потерю фокуса ввода позволяют следующие методы класса QWidget:

    focusInEvent(self, <event>) — вызывается при получении фокуса ввода;
    focusOutEvent(self, <event>) — вызывается при потере фокуса ввода.
------------------------------------------------------------------------------------------------------------------------
Через параметр <event> доступен экземпляр класса QFocusEvent, который поддерживает
следующие методы:
    gotFocus() — возвращает значение True, если тип события QEvent.FocusIn (получение фокуса ввода), и False — в противном случае;
    lostFocus() — возвращает значение True, если тип события QEvent.FocusOut (потеря фокуса ввода), и False — в противном случае;
    reason() — возвращает причину установки фокуса. Значение аналогично значению параметра <Причина> в методе setFocus().
